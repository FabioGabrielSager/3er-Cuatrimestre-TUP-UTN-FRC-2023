// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(ZoosContext))]
    [Migration("20230803194007_Segunda_migración")]
    partial class Segunda_migración
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Data.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AnioDeNacimiento")
                        .HasColumnType("integer");

                    b.Property<int>("ContinenteId")
                        .HasColumnType("integer");

                    b.Property<int>("FamiliaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreCientifico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PaisId")
                        .HasColumnType("integer");

                    b.Property<bool>("PeligroDeExtincion")
                        .HasColumnType("boolean");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ZooId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ContinenteId");

                    b.HasIndex("FamiliaId");

                    b.HasIndex("PaisId");

                    b.HasIndex("ZooId");

                    b.ToTable("animal", (string)null);
                });

            modelBuilder.Entity("API.Data.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ciudad", (string)null);
                });

            modelBuilder.Entity("API.Data.Continente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("continente", (string)null);
                });

            modelBuilder.Entity("API.Data.Familia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("familia", (string)null);
                });

            modelBuilder.Entity("API.Data.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("pais", (string)null);
                });

            modelBuilder.Entity("API.Data.Zoo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CiudadId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PaisId")
                        .HasColumnType("integer");

                    b.Property<double>("PresupuestoAnual")
                        .HasColumnType("double precision");

                    b.Property<double>("TamanioEnM2")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CiudadId");

                    b.HasIndex("PaisId");

                    b.ToTable("zoo", (string)null);
                });

            modelBuilder.Entity("API.Data.Animal", b =>
                {
                    b.HasOne("API.Data.Continente", "ContinenteIdNavegation")
                        .WithMany()
                        .HasForeignKey("ContinenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Data.Familia", "FamiliaIdNavegation")
                        .WithMany()
                        .HasForeignKey("FamiliaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Data.Pais", "PaisIdNavegation")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Data.Zoo", "ZooIdNavegation")
                        .WithMany("Animales")
                        .HasForeignKey("ZooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContinenteIdNavegation");

                    b.Navigation("FamiliaIdNavegation");

                    b.Navigation("PaisIdNavegation");

                    b.Navigation("ZooIdNavegation");
                });

            modelBuilder.Entity("API.Data.Zoo", b =>
                {
                    b.HasOne("API.Data.Ciudad", "IdCiudadZooNavegation")
                        .WithMany()
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Data.Pais", "IdPaisZooNavegation")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCiudadZooNavegation");

                    b.Navigation("IdPaisZooNavegation");
                });

            modelBuilder.Entity("API.Data.Zoo", b =>
                {
                    b.Navigation("Animales");
                });
#pragma warning restore 612, 618
        }
    }
}
