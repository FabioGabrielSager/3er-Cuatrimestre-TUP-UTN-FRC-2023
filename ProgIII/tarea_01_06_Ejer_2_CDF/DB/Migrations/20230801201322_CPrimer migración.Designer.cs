// <auto-generated />
using System;
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DB.Migrations
{
    [DbContext(typeof(ZoosContext))]
    [Migration("20230801201322_CPrimer migración")]
    partial class CPrimermigración
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AnimalZoo", b =>
                {
                    b.Property<Guid>("AnimalesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ZooId")
                        .HasColumnType("uuid");

                    b.HasKey("AnimalesId", "ZooId");

                    b.HasIndex("ZooId");

                    b.ToTable("AnimalZoo");
                });

            modelBuilder.Entity("DB.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FamiliaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreCientifico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("PeligroDeExtinsion")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("FamiliaId");

                    b.ToTable("Animales");
                });

            modelBuilder.Entity("DB.Ciudad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("DB.Familia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Familias");
                });

            modelBuilder.Entity("DB.Pais", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("DB.Zoo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CiudadId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PaisId")
                        .HasColumnType("uuid");

                    b.Property<double>("PresupuestoAnual")
                        .HasColumnType("double precision");

                    b.Property<double>("TamanioEnM2")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CiudadId");

                    b.HasIndex("PaisId");

                    b.ToTable("Zoos");
                });

            modelBuilder.Entity("AnimalZoo", b =>
                {
                    b.HasOne("DB.Animal", null)
                        .WithMany()
                        .HasForeignKey("AnimalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DB.Zoo", null)
                        .WithMany()
                        .HasForeignKey("ZooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DB.Animal", b =>
                {
                    b.HasOne("DB.Familia", "Familia")
                        .WithMany()
                        .HasForeignKey("FamiliaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Familia");
                });

            modelBuilder.Entity("DB.Zoo", b =>
                {
                    b.HasOne("DB.Ciudad", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DB.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");

                    b.Navigation("Pais");
                });
#pragma warning restore 612, 618
        }
    }
}
